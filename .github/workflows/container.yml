name: Push Container Image

on:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare Metadata
        run: |
          mversion=$(echo ${{ github.ref_name }} | cut -d. -f1)
          gmajor=$(git -c 'versionsort.suffix=-' tag --list "${mversion}.*" --sort=-v:refname | head -n 1)
          if [ "${{ github.ref_name }}" = "$gmajor" ]; then
            echo "LATEST_MAJOR=true" >> "$GITHUB_ENV"
          else
            echo "LATEST_MAJOR=false" >> "$GITHUB_ENV"
          fi

          gtag=$(git -c 'versionsort.suffix=-' tag --list --sort=-v:refname | head -n 1)
          if [ "${{ github.ref_name }}" = "$gtag" ]; then
              echo "LATEST=true" >> "$GITHUB_ENV"
          else
            echo "LATEST=false" >> "$GITHUB_ENV"
          fi

      - name: Extract Container Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/backbot
          flavor: |
            latest=false # Disable 'latest' flavor to avoid automatic 'latest' tag generation
          tags: |
            type=edge,event=push,branch=main
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ env.LATEST_MAJOR }}
            type=raw,value=latest,enable=${{ env.LATEST }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build and push Container Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./Containerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
